var Armory = require('../../lib/Armory');
var Address = require('../../lib/Address');

// Initial public key can be retrieved from paper backup
var pubkey = '04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235';

// Chain code can be generated by entering paper backup
// on brainwallet.org/#chains or by using Armory.fromSeed() below

var chaincode = '6c7e97c551a7167d3f5b6443bc0a8c717c969b0875e19d00045273c6c3433201';

var armory = new Armory(chaincode, pubkey);

console.log('Deriving public keys for');
console.log('------------------------');
console.log('Chain code: %s', chaincode);
console.log('Public key: %s', pubkey);
console.log('');

for (var i = 0; i < 5; i++) {
  console.log(Address.fromPubKey(armory.pubkey,'ltc').as('base58'));
  armory = armory.next();
}

// Derive first public key and chain code from seed
var seed = [
  'aagh hjfj sihk ietj giik wwai awtd uodh hnji',
  'soss uaku egod utai itos fijj ihgi jhau jtoo'
];

console.log('');
console.log('');
console.log('Deriving public keys for');
console.log('------------------------');
console.log('Seed: %s', seed.join(' '));
console.log('');

// skip first public key
var a = Armory.fromSeed(seed.join('\n')).next();

for (var i = 0; i < 5; i++) {
  console.log(Address.fromPubKey(a.pubkey,'ltc').as('base58'));
  a = a.next();
}


var mpk = '045a09a3286873a72f164476bde9d1d8e5c2bc044e35aa47eb6e798e325a86417f7c35b61d9905053533e0b4f2a26eca0330aadf21c638969e45aaace50e4c0c8784ac14bc4b388b33da099a0b4ee3b507284d99e1476639e36e5ca5e6af86481e';

console.log('');
console.log('');
console.log('Deriving public keys for');
console.log('------------------------');
console.log('Master Public Key: %s', mpk);
console.log('');

// skip first public key
var b = Armory.fromMasterPublicKey(mpk).next();

for (var i = 0; i < 5; i++) {
  console.log(Address.fromPubKey(b.pubkey,'ltc').as('base58'));
  b = b.next();
}
